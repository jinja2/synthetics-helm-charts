apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "splunk-synthetics-runner.fullname" . }}
  labels:
    {{- include "splunk-synthetics-runner.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  {{- if .Values.updateStrategy }}
  strategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "splunk-synthetics-runner.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "splunk-synthetics-runner.podLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "splunk-synthetics-runner.serviceAccountName" . }}
      {{- if .Values.automountServiceAccountToken }}
      automountServiceAccountToken: {{ .Values.automountServiceAccountToken }}
      {{- end }}
      {{- if .Values.dnsPolicy }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      {{- end }}
      {{- with .Values.dnsConfig }}
      dnsConfig:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.hostAliases }}
      hostAliases:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- if .Values.synthetics.additionalCaCerts }}
          command: ["/usr/bin/sh", "-c", "--"]
          args: ["sudo update-ca-certificates; exec /usr/bin/tini -s -- bundle exec bin/start_runner"]
          {{- end }}
          env:
          {{- if not .Values.synthetics.enableNetworkShaping }}
            - name: DISABLE_NETWORK_SHAPING
              value: "true"
          {{- end }}
            - name: LOG_LEVEL
              value: {{ .Values.synthetics.logLevel | upper }}
            - name: RUNNER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "splunk-synthetics-runner.secretName" . }}
                  key: runner_token
          {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
          {{- end }}
          securityContext:
            {{- include "splunk-synthetics-runner.containerSecurityContext" . | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            exec:
              command:
              - bin/healthcheck
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if or .Values.synthetics.additionalCaCerts .Values.volumeMounts }}
          volumeMounts:
          {{- if .Values.synthetics.additionalCaCerts }}
            {{- range $cert := keys .Values.synthetics.additionalCaCerts | sortAlpha }}
            - name: {{ include "cleanupNames" $cert }}
              mountPath: {{ printf "/usr/local/share/ca-certificates/%s" $cert }}
              subPath: {{ $cert }}
              readOnly: false
            {{- end }}
          {{- end }}
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds | default 30 }}
      {{- if or .Values.synthetics.additionalCaCerts .Values.volumes }}
      volumes:
      {{- if .Values.synthetics.additionalCaCerts }}
        {{- range $cert := keys .Values.synthetics.additionalCaCerts | sortAlpha }}
        - name: {{ include "cleanupNames" $cert }}
          configMap:
            name: {{ include "splunk-synthetics-runner.fullname" $ }}
            items:
              - key: {{ $cert }}
                path: {{ $cert }}
        {{- end }}
      {{- end }}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
